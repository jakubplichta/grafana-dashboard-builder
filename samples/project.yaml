---
- name: Example project
  project:
    dashboard-prefix: MyApp
    metric-prefix: metric.prefix
    component:
      - frontend
      - backend
    env: !include env.yaml
    dashboards:
      - overview
      - '{component}-{env}-{nodes}-system-details'

- default-dashboard: &default-dashboard
    time_options: [1h, 6h, 12h, 24h, 2d, 7d, 14d, 30d]
    refresh_intervals: [5m, 15m, 30m, 1h]
    time:
      from: now-2d
      to: now

- name: overview
  dashboard:
    uid: 'uid{dashboard-prefix}'
    title: '{dashboard-prefix} Overview'
    tags:
      - tag1
      - tag2
    <<: *default-dashboard
    rows:
      - row:
          title: '{dashboard-prefix}-row'
          panels:
            - graph:
                span: 3
                title: Frontend
                target: 'aliasByMetric({metric-prefix}.frontend.*)'
            - graph:
                span: 3
                title: Backend
                target: 'aliasByMetric({metric-prefix}.backend.*)'

- name: '{component}-connections'
  dashboard:
    title: '{dashboard-prefix} {component} connections'
    time_options: [1h]
    refresh_intervals: [5m]
    templates:
      - query:
          query: '{metric-prefix}.{component}.$application'
    time:
      from: now-12h
      to: now
    rows:
      - row:
          title: '{dashboard-prefix}-row'
          panels:
            - graph:
                span: 3
                title: Connections
                target: 'aliasByMetric({metric-prefix}.{component}.$application.*)'

- name: '{component}-{env}-{nodes}-system-details'
  dashboard:
    title: '{dashboard-prefix} System Details of {component} {env} {nodes}'
    time_options: [1h]
    refresh_intervals: [5m]
    templates:
      - template:
          metric-prefix: '{metric-prefix}'
          component: '{component}'
    time:
      from: now-12h
      to: now
    rows:
      - first-row:
          component: '{component}'
          env: '{env}'
          nodes: '{nodes}'
          metric-prefix: '{metric-prefix}'

- name: first-row
  rows:
    - row:
        title: '{component} {env} {nodes}'
        panels:
          - connections:
              metric-prefix: '{metric-prefix}'
              component: '{component}'
          - memory:
              metric-prefix: '{metric-prefix}'
              component: '{component}'
          - text:
              span: 3
              title: text title
              mode: text
              content: example text

    - second-row
    - '{param}-row':
        param:
          - value1
          - value2

- name: second-row
  rows:
    - row:
        title: Placeholder row
        height: 100px
        showTitle: true

- name: '{param}-row'
  rows:
    - row:
        title: '{param} row'

- name: connections
  panels:
    - graph:
        target: 'aliasByMetric({metric-prefix}.{component}.$application.connections.*)'
        span: 3
        grid:
          leftMax: 100
          rightMax: 10
          leftMin: 0
          rightMin: -10
        yaxes:
          - my-yaxes

- name: memory
  panels:
    - graph:
        targets:
          - 'aliasByMetric({metric-prefix}.{component}.$application.load.*)'
          - 'aliasByMetric({metric-prefix}.{component}.$application.unload.*)'
        y_formats: [bytes, short]
        span: 4
        links:
          - dashboard-link:
              title: link title
              dashboard: overview
              params:
                - application
                - param-with-value: param-value
          - absolute-link:
              title: link title
              url: https://github.com

- name: template
  templates:
    - query:
        query: '{metric-prefix}.{component}.$application'
        application:
          metric: '*core*'
          current: first
          options:
            - first
            - last
    - custom-template:
        name: service
        options: 
          - service1
          - service2
          - service3
          - service4
        includeAll: true
        multi: true
        current: All
    - custom-template:
        name: service-w-all
        options: 
          - service1
          - service2
          - service3
          - service4
        includeAll: false
        multi: true
        current: service2

- name: 'some dashboard'
  dashboard:
    title: some dashboard
    templates:
      - another-template:
          choices:
            - x
            - y
    rows:
      - row:
          title: 'App'
          height: '250px'
          editable: true
          collapse: true
          panels:
            - singlestat-{title}:
                title:
                  - overview:
                      dashboard: 'Overview'
                  - resources:
                      dashboard: 'resources'
                      params:
                        - cluster: eu
                        - node: 'www01'

- name: 'mixed dashboard'
  dashboard:
    title: mixed dashboard
    rows:
    - row:
        panels:
        - graph:
            span: 6
            title: "Mixed example"
            datasource: -- Mixed --
            yaxes:
            - yaxis:
                label: Milicores
            - yaxis:
            targets:
            - prometheus-target:
                expr: 'sum(rate(container_cpu_usage_seconds_total{{namespace="$namespace", pod_name=~"$pod", container_name=~".+"}}[$interval])) by (container_name) * 1000'
                legendFormat: Usage {{{{container_name}}}}
                datasource: default
            - prometheus-target:
                expr: "sum(kube_pod_container_resource_limits_cpu_cores{{namespace=\"$namespace\", pod=~\"$pod\"}}) by (container) * 1000"
                legendFormat: Limit {{{{container}}}}
                datasource: Prometheus Datasource
            - elastic-target:
                query: '(status: "succeeded")'
                bucketAggs:
                - field: finishedAt
                  type: date_histogram
                  id: "2"
                  settings:
                    interval: 'auto'
                    min_doc_count: 1
                    trimEdges: 0
                hide: false
                metrics: 
                - field: "select metric"
                  id: "1"
                  type: count                
                refId: "A"
                timeField: finishedAt
                datasource: Elastic Datasource


- name: 'another-template'
  templates:
    - custom-template:
        name: 'choice'
        options: '{choices}'

- name: 'singlestat-{title}'
  panels:
    - single-stat:
        title: '{title}'
        error: false
        span: 4
        sparkline:
          show: false
          full: false
          lineColor: "rgb(31, 120, 193)"
          fillColor: "rgba(31, 118, 189, 0.18)"
        valueMaps:
          'null': '{title}'
        links:
          - dashboard-link:
              title: '{title}'
              dashboard: '{dashboard}'
              params: '{params}'

- name: my-yaxes
  yaxes:
    - yaxis:
        format: bytes

- name: docker-statsd
  dashboard:
    title: Docker statsd
    <<: *default-dashboard
    templates:
      - query:
          query: 'stats.statsd.graphiteStats.$metric'
          metric:
            current: calculationtime
            includeAll: true
            multi: true
            current: All
    rows:
      - row:
          panels:
            - graph:
                title: dynamic
                target: 'stats.statsd.graphiteStats.$metric'
                repeat: metric
